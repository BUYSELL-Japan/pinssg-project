---
import { languages, type Language, getLocalizedPath } from '../utils/language';

interface Props {
  currentLanguage: Language;
  currentPath: string;
}

const { currentLanguage, currentPath } = Astro.props;
---

<div class="language-selector">
  <div class="language-dropdown">
    <button class="language-button" id="languageButton">
      <span class="current-language">
        {languages.find(l => l.code === currentLanguage)?.flag}
        {languages.find(l => l.code === currentLanguage)?.name}
      </span>
      <svg class="dropdown-arrow" width="12" height="12" viewBox="0 0 12 12" fill="none">
        <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    <div class="language-menu" id="languageMenu">
      {languages.map(lang => (
        <a
          href={getLocalizedPath(currentPath, lang.code)}
          class={`language-option ${lang.code === currentLanguage ? 'active' : ''}`}
        >
          <span class="language-flag">{lang.flag}</span>
          <span class="language-name">{lang.name}</span>
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  function initLanguageSelector() {
    const button = document.getElementById('languageButton');
    const menu = document.getElementById('languageMenu');

    if (!button || !menu) return;

    // Toggle dropdown
    button.addEventListener('click', (e) => {
      e.stopPropagation();
      menu.classList.toggle('show');
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', () => {
      menu.classList.remove('show');
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initLanguageSelector);
  
  // Re-initialize on navigation (for SPA-like behavior)
  document.addEventListener('astro:page-load', initLanguageSelector);
</script>

<style>
  .language-selector {
    position: relative;
    z-index: 1000;
  }

  .language-dropdown {
    position: relative;
  }

  .language-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(77, 208, 225, 0.3);
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    font-weight: 500;
    color: #006064;
    backdrop-filter: blur(10px);
  }

  .language-button:hover {
    background: rgba(255, 255, 255, 1);
    border-color: #4dd0e1;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(77, 208, 225, 0.2);
  }

  .current-language {
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }

  .dropdown-arrow {
    transition: transform 0.3s ease;
  }

  .language-menu.show .dropdown-arrow {
    transform: rotate(180deg);
  }

  .language-menu {
    position: absolute;
    top: calc(100% + 0.5rem);
    right: 0;
    background: white;
    border: 1px solid rgba(77, 208, 225, 0.3);
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    min-width: 150px;
    overflow: hidden;
  }

  .language-menu.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .language-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
    padding: 0.75rem 1rem;
    border: none;
    background: none;
    cursor: pointer;
    transition: background-color 0.2s ease;
    font-size: 0.9rem;
    color: #424242;
    text-decoration: none;
  }

  .language-option:hover {
    background: rgba(77, 208, 225, 0.1);
    color: #424242;
  }

  .language-option.active {
    background: rgba(77, 208, 225, 0.15);
    color: #006064;
    font-weight: 600;
  }

  .language-flag {
    font-size: 1.1rem;
  }

  .language-name {
    flex: 1;
    text-align: left;
  }

  @media (max-width: 768px) {
    .language-button {
      padding: 0.4rem 0.8rem;
      font-size: 0.8rem;
    }

    .language-menu {
      min-width: 130px;
    }

    .language-option {
      padding: 0.6rem 0.8rem;
      font-size: 0.8rem;
    }
  }
</style>